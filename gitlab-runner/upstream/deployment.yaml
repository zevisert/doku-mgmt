# Source: gitlab-runner/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitlab-runner-default # {"$kpt-set":"runner-name-subst"}
  labels:
    app: gitlab-runner-default # {"$kpt-set":"runner-name-subst"}
    chart: gitlab-runner-0.25.0
    release: "gitlab-runner"
    heritage: "Helm"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitlab-runner-default # {"$kpt-set":"runner-name-subst"}
  template:
    metadata:
      labels:
        app: gitlab-runner-default # {"$kpt-set":"runner-name-subst"}
        chart: gitlab-runner-0.25.0
        release: "gitlab-runner"
        heritage: "Helm"
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9252'
    spec:
      securityContext:
        runAsUser: 100
        fsGroup: 65533
      terminationGracePeriodSeconds: 3600
      initContainers:
      - name: configure
        command: ['sh', '/config/configure']
        image: gitlab/gitlab-runner:alpine-v13.8.0
        imagePullPolicy: "IfNotPresent"
        envFrom:
        - configMapRef:
            name: gitlab-runner-default-env # {"$kpt-set":"runner-name-cfgmap-subst"}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: runner-secrets
          mountPath: /secrets
          readOnly: false
        - name: scripts
          mountPath: /config
          readOnly: true
        - name: init-runner-secrets
          mountPath: /init-secrets
          readOnly: true
        resources: {}
      serviceAccountName: gitlab-runner
      containers:
      - name: gitlab-runner
        image: gitlab/gitlab-runner:alpine-v13.8.0
        imagePullPolicy: "IfNotPresent"
        envFrom:
        - configMapRef:
            name: gitlab-runner-default-env # {"$kpt-set":"runner-name-cfgmap-subst"}
        securityContext:
          allowPrivilegeEscalation: false
        lifecycle:
          preStop:
            exec:
              command: ["/entrypoint", "unregister", "--all-runners"]
        command: ["/bin/bash", "/scripts/entrypoint"]
        livenessProbe:
          exec:
            command: ["/bin/bash", "/scripts/check-live"]
          initialDelaySeconds: 60
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command: ["/usr/bin/pgrep", "gitlab.*runner"]
          initialDelaySeconds: 10
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        ports:
        - name: metrics
          containerPort: 9252
        volumeMounts:
        - name: runner-secrets
          mountPath: /secrets
        - name: etc-gitlab-runner
          mountPath: /home/gitlab-runner/.gitlab-runner
        - name: scripts
          mountPath: /scripts
        resources: {}
      volumes:
      - name: runner-secrets
        emptyDir:
          medium: "Memory"
      - name: etc-gitlab-runner
        emptyDir:
          medium: "Memory"
      - name: init-runner-secrets
        projected:
          sources:
          - secret:
              name: gitlab-runner-default # {"$kpt-set":"runner-name-subst"}
              items:
              - key: runner-registration-token
                path: runner-registration-token
              - key: runner-token
                path: runner-token
      - name: scripts
        configMap:
          name: gitlab-runner-default # {"$kpt-set":"runner-name-subst"}
