# Source: cert-manager/templates/cainjector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cert-manager-cainjector
  labels:
    app: cainjector
    app.kubernetes.io/component: "cainjector"
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cainjector
    helm.sh/chart: cert-manager-v1.2.0
rules:
- resources: ["certificates"]
  apiGroups: ["cert-manager.io"]
  verbs: ["get", "list", "watch"]
- resources: ["secrets"]
  apiGroups: [""]
  verbs: ["get", "list", "watch"]
- resources: ["events"]
  apiGroups: [""]
  verbs: ["get", "create", "update", "patch"]
- resources: ["validatingwebhookconfigurations", "mutatingwebhookconfigurations"]
  apiGroups: ["admissionregistration.k8s.io"]
  verbs: ["get", "list", "watch", "update"]
- resources: ["apiservices"]
  apiGroups: ["apiregistration.k8s.io"]
  verbs: ["get", "list", "watch", "update"]
- resources: ["customresourcedefinitions"]
  apiGroups: ["apiextensions.k8s.io"]
  verbs: ["get", "list", "watch", "update"]
- resources: ["auditsinks"]
  apiGroups: ["auditregistration.k8s.io"]
  verbs: ["get", "list", "watch", "update"]
---
# Source: cert-manager/templates/cainjector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cert-manager-cainjector
  labels:
    app: cainjector
    app.kubernetes.io/component: "cainjector"
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cainjector
    helm.sh/chart: cert-manager-v1.2.0
roleRef:
  name: cert-manager-cainjector
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
subjects:
- name: cert-manager-cainjector
  namespace: "default"
  kind: ServiceAccount
---
# Source: cert-manager/templates/cainjector-rbac.yaml
# leader election rules
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cert-manager-cainjector:leaderelection
  namespace: kube-system
  labels:
    app: cainjector
    app.kubernetes.io/component: "cainjector"
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cainjector
    helm.sh/chart: cert-manager-v1.2.0
rules:
- resources: ["configmaps"]
  # Used for leader election by the controller
  # cert-manager-cainjector-leader-election is used by the CertificateBased injector controller
  #   see cmd/cainjector/start.go#L113
  # cert-manager-cainjector-leader-election-core is used by the SecretBased injector controller
  #   see cmd/cainjector/start.go#L137
  apiGroups: [""]
  resourceNames: ["cert-manager-cainjector-leader-election", "cert-manager-cainjector-leader-election-core"]
  verbs: ["get", "update", "patch"]
- resources: ["configmaps"]
  apiGroups: [""]
  verbs: ["create"]
---
# Source: cert-manager/templates/cainjector-rbac.yaml
# grant cert-manager permission to manage the leaderelection configmap in the
# leader election namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cert-manager-cainjector:leaderelection
  namespace: kube-system
  labels:
    app: cainjector
    app.kubernetes.io/component: "cainjector"
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cainjector
    helm.sh/chart: cert-manager-v1.2.0
roleRef:
  name: cert-manager-cainjector:leaderelection
  kind: Role
  apiGroup: rbac.authorization.k8s.io
subjects:
- name: cert-manager-cainjector
  namespace: default
  kind: ServiceAccount
